/* Edge Impulse ingestion SDK
 * Copyright (c) 2022 EdgeImpulse Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/* Includes ---------------------------------------------------------------- */
#include <Gesture_IMU_inferencing.h>

static const float features[] = {
    // copy raw features here (for example from the 'Live classification' page)
    // see https://docs.edgeimpulse.com/docs/running-your-impulse-arduino
    8.1888, 4.9877, -0.3089, 1.7090, -1.5869, -4.0894, 36.0718, 5.5298, 18.7866, 8.1409, 5.1134, -0.2580, 1.0986, -2.4414, -4.1504, 36.2549, 5.0415, 17.7490, 8.0966, 5.1505, -0.2322, 0.7935, -2.6245, -4.5776, 36.2549, 5.0415, 17.7490, 8.1241, 5.1685, -0.2388, 1.0986, -1.9531, -4.8218, 36.2549, 5.0415, 17.7490, 8.1570, 5.1571, -0.2604, 1.0376, -1.1597, -5.6152, 36.2549, 5.0415, 17.7490, 8.1636, 4.9722, -0.2598, 0.4883, -1.5259, -6.0425, 36.2549, 5.0415, 17.7490, 8.1517, 4.8393, -0.2442, 0.1221, -1.7090, -6.2256, 36.1328, 5.6641, 17.1509, 8.2271, 4.7279, -0.2670, 0.0610, -1.3428, -6.6528, 36.1328, 5.6641, 17.1509, 8.3588, 4.6938, -0.3490, 0.4272, -0.3052, -6.8359, 36.1328, 5.6641, 17.1509, 8.4659, 4.6382, -0.4423, 0.6714, 0.4883, -6.5308, 36.1328, 5.6641, 17.1509, 8.5186, 4.6489, -0.5321, 0.9766, -14.9536, -5.4932, 36.1328, 5.6641, 17.1509, 8.5156, 4.6986, -0.5525, 1.4038, -1.4038, -5.0049, 36.3770, 5.5542, 18.4692, 8.4605, 4.7806, -0.5423, 1.8921, -2.0752, -4.7607, 36.3770, 5.5542, 18.4692, 8.4533, 4.8159, -0.5148, 2.9297, -2.5024, -4.8218, 36.3770, 5.5542, 18.4692, 8.4623, 4.8602, -0.4345, 4.0894, -2.6855, -5.0659, 36.3770, 5.5542, 18.4692, 8.4557, 4.9021, -0.3184, 5.0049, -2.8687, -5.6152, 36.3770, 5.5542, 18.4692, 8.4874, 4.9057, -0.2508, 5.1880, -2.9907, -6.4697, 36.2427, 5.8472, 17.7368, 8.6437, 4.8177, -0.2137, 7.5073, -3.0518, -10.6201, 36.2427, 5.8472, 17.7368, 9.1291, 4.5077, 0.0066, 8.7891, -2.3804, -11.9019, 36.2427, 5.8472, 17.7368, 9.2428, 4.5286, 0.0994, 9.5825, -1.8921, -12.4512, 36.2427, 5.8472, 17.7368, 9.1985, 4.4568, 0.2274, 9.5215, -1.3428, -12.6343, 36.2427, 5.8472, 17.7368, 9.2063, 4.4239, 0.2963, 7.9956, -1.0376, -12.8784, 36.8652, 5.8716, 17.4805, 9.2422, 4.5065, 0.2514, 4.8218, -1.0986, -12.8784, 36.8652, 5.8716, 17.4805, 9.1866, 4.6011, 0.1616, 1.8311, -0.6104, -12.2681, 36.8652, 5.8716, 17.4805, 9.0998, 4.6394, 0.0317, -4.3335, -0.4883, -13.1836, 36.8652, 5.8716, 17.4805, 9.1279, 4.4227, -0.4142, -5.7983, -1.8311, -15.5029, 36.8652, 5.8716, 17.4805, 9.2380, 4.1073, -0.5710, -5.2490, -3.4790, -18.4326, 36.5112, 6.5552, 16.5283, 9.3212, 3.6302, -0.5674, -2.8687, -4.8218, -21.0571, 36.5112, 6.5552, 16.5283, 9.3931, 3.0634, -0.4836, -0.6104, -5.3711, -22.7051, 36.5112, 6.5552, 16.5283, 9.5828, 2.4433, -0.3705, 0.8545, -5.6763, -23.7427, 36.5112, 6.5552, 16.5283, 9.8815, 1.8160, -0.2448, 0.6714, -6.9580, -26.1841, 36.5112, 6.5552, 16.5283, 10.4256, 1.2390, -0.3268, -3.7842, -8.0566, -27.6489, 37.6953, 7.0190, 16.8945, 12.2290, 0.0114, -0.3370, -4.8828, -11.5356, -29.5410, 37.6953, 7.0190, 16.8945, 13.0562, -0.7320, -0.2801, -3.7231, -14.4043, -29.6021, 37.6953, 7.0190, 16.8945, 13.6104, -1.5431, -0.1239, -1.4038, -16.6626, -26.0010, 37.6953, 7.0190, 16.8945, 13.8505, -2.5319, 0.1879, 2.2583, -19.3481, -20.2637, 37.6953, 7.0190, 16.8945, 14.1515, -3.7523, 0.6530, 6.8359, -22.8882, -15.5640, 37.4023, 7.5317, 16.8091, 14.7423, -4.7363, 1.0642, 15.3198, -28.0151, -7.4463, 37.4023, 7.5317, 16.8091, 16.2878, -5.5701, 1.4138, 19.1650, -25.2075, 0.4272, 37.4023, 7.5317, 16.8091, 16.6409, -5.8706, 1.3928, 20.1416, -20.7520, 12.5732, 37.4023, 7.5317, 16.8091, 16.6253, -6.1202, 1.1193, 18.1885, -17.3950, 26.6113, 37.4023, 7.5317, 16.8091, 16.4553, -6.2189, 0.7189, 16.2354, -17.2119, 41.9312, 37.7808, 7.2632, 17.4072, 16.1351, -6.0885, 0.2652, 16.9678, -19.4092, 59.6313, 37.7808, 7.2632, 17.4072, 15.6515, -5.8718, 0.0192, 23.2544, -22.8882, 79.2847, 37.7808, 7.2632, 17.4072, 14.9392, -5.6342, 0.1203, 44.9829, -33.0200, 119.0796, 37.7808, 7.2632, 17.4072, 13.4524, -5.2194, 0.9708, 52.6123, -39.3066, 137.9395, 37.7808, 7.2632, 17.4072, 12.6623, -4.9542, 1.4886, 54.6265, -45.4712, 158.2642, 36.1938, 3.4546, 15.8691, 11.6544, -4.8602, 1.6891, 50.9033, -51.3306, 179.2603, 36.1938, 3.4546, 15.8691, 10.7266, -4.3120, 1.8465, 44.5557, -55.4810, 200.6836, 36.1938, 3.4546, 15.8691, 9.5768, -4.0642, 2.1638, 38.3301, -59.6924, 222.3511, 36.1938, 3.4546, 15.8691, 8.1726, -3.8146, 2.5600, 30.3345, -70.5566, 262.9395, 36.1938, 3.4546, 15.8691, 4.4909, -3.5051, 3.9397, 9.3994, -71.1670, 279.7852, 32.0435, -2.4902, 13.7085, 3.1825, -3.6727, 4.4113, -2.3193, -65.1855, 292.0532, 32.0435, -2.4902, 13.7085, 2.1787, -3.8421, 4.4281, -12.8174, -51.9409, 302.0020, 32.0435, -2.4902, 13.7085, 1.0654, -4.5424, 4.3161, -18.6768, -33.3252, 314.7583, 32.0435, -2.4902, 13.7085, -1.0014, -5.5881, 4.4957, -20.8740, -15.3198, 335.2661, 32.0435, -2.4902, 13.7085, -3.5991, -6.9570, 5.1218, -22.5830, -4.3335, 366.8823, 32.0435, -2.4902, 13.7085, -6.2686, -8.8550, 5.8185, -46.5088, -9.2163, 444.9463, 24.1577, -8.0811, 13.5132, -14.0228, -12.2122, 6.4171, -81.4209, -24.9634, 502.4414, 24.1577, -8.0811, 13.5132, -19.6109, -13.2136, 6.9635, -136.7798, -49.2554, 568.7866, 24.1577, -8.0811, 13.5132, -19.6109, -12.6037, 7.6956, -218.3228, -74.3408, 622.2534, 24.1577, -8.0811, 13.5132, -19.6109, -6.6852, 7.2287, -332.3975, -80.6885, 633.2397, 24.1577, -8.0811, 13.5132, -19.6109, 3.7763, 1.0463, -454.1626, -41.9312, 571.1060, 9.1431, -7.5806, 22.3267, -19.6109, 15.7431, -11.0415, -515.0757, 53.1006, 358.5815, 9.1431, -7.5806, 22.3267, -19.6109, 19.6109, -19.6109, -242.1265, 259.2163, 269.7754, 9.1431, -7.5806, 22.3267, -19.5636, 19.6109, -19.6109, -75.1343, 299.2554, 196.6553, 9.1431, -7.5806, 22.3267, -11.6789, 19.6109, -19.6109, -33.3252, 320.3735, 136.9629, 9.1431, -7.5806, 22.3267, -14.5597, 19.6109, -19.6109, -54.9316, 288.3911, 84.3506, -2.8442, -2.3560, 24.3774, -19.6109, 19.6109, -19.6109, -55.2368, 142.8833, 3.7842, -2.8442, -2.3560, 24.3774, -15.6383, 13.3195, -19.6109, -46.3867, -44.4946, -98.6328, -2.8442, -2.3560, 24.3774, -8.2929, 5.3552, -19.5546, 81.8481, -253.0518, -167.0532, -2.8442, -2.3560, 24.3774, -0.7105, -2.2392, -3.8026, 165.8325, -242.7979, -133.4839, -2.8442, -2.3560, 24.3774, -1.0331, -1.9884, 2.5684, 217.0410, -196.1670, -76.9653, 4.4556, -4.9683, 23.1689, -2.2565, -0.4148, 7.0060, 222.7173, -155.3955, -26.7334, 4.4556, -4.9683, 23.1689, -3.2968, 1.9477, 9.5870, 196.1670, -135.6201, -0.0610, 4.4556, -4.9683, 23.1689, -4.2323, 4.4496, 10.7428, 158.3862, -121.8872, 12.5732, 4.4556, -4.9683, 23.1689, -5.3133, 7.0850, 10.8775, 123.7793, -92.5293, 18.9209, 4.4556, -4.9683, 23.1689, -6.0490, 9.3105, 10.2065, 62.2559, 13.9160, 5.5542, 6.7505, -7.2998, 21.1426, -5.8335, 11.0582, 6.6780, 23.0103, 59.2041, -8.1787, 6.7505, -7.2998, 21.1426, -5.9412, 10.9660, 4.3826, -21.8506, 83.0688, -18.1885, 6.7505, -7.2998, 21.1426, -6.1088, 10.5423, 1.8226, -65.0635, 86.3037, -24.3530, 6.7505, -7.2998, 21.1426, -5.6545, 10.0556, -0.8362, -100.2197, 78.2471, -29.5410, 6.7505, -7.2998, 21.1426, -5.3678, 9.1249, -3.4423, -120.8496, 65.3076, -33.7524, 5.1636, -5.5420, 23.0103, -4.5627, 8.8855, -5.6240, -123.4131, 36.6821, -33.3862, 5.1636, -5.5420, 23.0103, -3.8283, 8.8280, -7.9224, -79.9561, 22.3999, -30.8228, 5.1636, -5.5420, 23.0103, -2.7210, 9.1255, -7.5770, -39.3066, 10.3149, -28.1372, 5.1636, -5.5420, 23.0103, -2.3355, 9.4559, -6.5248, 3.9673, 1.8311, -25.7568, 5.1636, -5.5420, 23.0103, -1.9483, 10.0443, -4.8949, 44.9219, -2.9297, -24.2920, 5.5298, -5.0049, 22.7539, -1.3713, 10.4824, -3.1502, 77.8198, -4.1504, -24.1089, 5.5298, -5.0049, 22.7539, -0.9499, 10.8332, -1.4287, 99.3652, -4.4556, -23.5596, 5.5298, -5.0049, 22.7539, -0.6452, 11.0552, 0.2041, 102.7832, -3.7842, -23.3154, 5.5298, -5.0049, 22.7539, -0.1832, 11.1528, 2.4726, 84.2896, -3.2349, -23.1934, 5.5298, -5.0049, 22.7539, 0.1927, 11.0546, 2.7683, 56.8848, -4.6997, -21.6064, 6.3843, -6.4697, 21.3257, 0.5734, 10.9379, 2.5857, 27.7100, -7.0801, -20.6299, 6.3843, -6.4697, 21.3257, 0.8739, 10.9092, 2.2643, 3.1738, -9.7656, -18.8599, 6.3843, -6.4697, 21.3257, 0.6955, 10.6865, 1.9255, -15.5029, -12.5122, -15.4419, 6.3843, -6.4697, 21.3257, 0.2801, 10.5046, 1.5077, -29.2358, -13.4277, -14.4653, 6.3843, -6.4697, 21.3257, 0.0958, 10.2945, 0.9948, -40.9546, -6.1646, -18.1885, 7.5439, -6.4453, 20.4834, 0.5818, 9.5606, 0.0928, -40.8325, -0.4883, -20.4468, 7.5439, -6.4453, 20.4834, 1.1558, 9.6319, -0.6829, -37.1704, 5.6763, -21.2402, 7.5439, -6.4453, 20.4834, 1.0355, 9.2482, -0.8793, -27.4048, 14.1602, -15.3198, 7.5439, -6.4453, 20.4834, 0.5525, 9.0597, -0.9457, -16.0522, 16.6016, -7.9346, 7.5439, -6.4453, 20.4834, 0.2376, 9.1578, -0.9840, -8.8501, 18.4937, -5.0049, 7.4097, -5.4077, 20.9961, -0.1389, 8.9836, -0.8799, -4.5776, 12.3291, -3.7842, 7.4097, -5.4077, 20.9961, -0.6309, 8.9956, -0.9391, -7.6904, 6.8970, -5.6152, 7.4097, -5.4077, 20.9961, -0.9583, 8.7245, -1.0780, -10.4980, 2.5024, -8.4229, 7.4097, -5.4077, 20.9961, -0.9828, 8.4402, -1.1678, -10.5591, 0.1831, -11.5967, 7.4097, -5.4077, 20.9961, -0.9697, 8.0493, -1.2204, -7.4463, -0.5493, -13.4888, 7.2632, -5.3589, 21.8018, -1.0738, 7.5705, -1.2145, -2.9907, -0.3662, -14.4043, 7.2632, -5.3589, 21.8018, -1.1714, 7.2071, -1.2432, 1.2817, -0.0610, -14.0381, 7.2632, -5.3589, 21.8018, -1.2175, 6.8965, -1.3162, 9.0332, -2.9297, -9.7656, 7.2632, -5.3589, 21.8018, -1.2923, 6.6577, -1.3623, 12.4512, -5.1880, -6.7749, 7.2632, -5.3589, 21.8018, -1.6287, 6.7343, -1.3707, 17.0898, -7.1411, -3.4790, 7.4585, -5.5298, 20.9595, -1.9896, 6.8803, -1.2216, 23.3154, -7.7515, -0.5493, 7.4585, -5.5298, 20.9595, -2.2176, 6.9653, -0.9092, 29.6631, -7.3242, 1.2207, 7.4585, -5.5298, 20.9595, -2.3631, 7.0719, -0.5273, 34.0576, -6.5918, 2.4414, 7.4585, -5.5298, 20.9595, -2.3739, 7.1730, -0.1903, 34.5459, -5.4321, 5.0049, 7.4585, -5.5298, 20.9595, -2.3140, 7.2814, 0.0096, 26.1841, -5.1270, 7.3242, 7.7637, -6.6406, 19.3481, -2.4708, 7.6225, 0.0437, 20.8130, -5.5542, 10.3149, 7.7637, -6.6406, 19.3481, -2.7749, 7.8745, -0.0006, 16.1743, -5.6152, 13.6719, 7.7637, -6.6406, 19.3481, -3.0011, 8.2091, -0.0916, 12.3901, -5.1880, 15.8081, 7.7637, -6.6406, 19.3481, -3.1807, 8.4773, -0.2101, 9.9487, -3.8452, 15.6250, 7.7637, -6.6406, 19.3481, -3.2825, 8.7245, -0.2795, 8.6060, -1.8921, 14.5264, 7.2998, -6.2744, 20.8496, -3.2160, 8.8316, -0.3214, 7.2021, 0.9155, 11.1694, 7.2998, -6.2744, 20.8496, -2.8874, 8.8735, -0.4507, 6.5918, 1.4038, 10.4370, 7.2998, -6.2744, 20.8496, -2.7156, 8.9615, -0.5064, 6.5308, 1.4648, 10.9863, 7.2998, -6.2744, 20.8496, -2.6444, 9.0531, -0.4274, 7.3242, 0.5493, 12.8784, 7.2998, -6.2744, 20.8496, -2.7994, 9.2201, -0.2717, 7.6904, -0.3052, 14.2822, 7.2998, -6.2744, 20.8496, -3.0676, 9.4870, -0.1269, 7.3853, -0.6714, 14.8926, 7.3853, -7.2021, 18.6035, -3.2280, 9.7043, -0.0341, 6.7139, -0.1221, 13.6108, 7.3853, -7.2021, 18.6035, -3.0963, 9.8055, -0.0018, 6.5918, 1.5869, 8.3008, 7.3853, -7.2021, 18.6035, -2.5570, 9.8294, 0.0443, 6.9580, 2.5024, 7.1411, 7.3853, -7.2021, 18.6035, -2.5097, 9.8450, 0.0754, 7.5073, 3.3569, 7.2632, 7.3853, -7.2021, 18.6035, -2.6222, 9.8641, 0.1227, 8.1177, 4.0894, 7.6294, 7.0801, -6.5430, 19.7388, -2.6773, 9.8755, 0.1383, 7.3853, 4.3945, 7.3853, 7.0801, -6.5430, 19.7388, -2.6342, 9.8180, 0.1347, 6.0425, 4.2725, 6.8359, 7.0801, -6.5430, 19.7388, -2.5977, 9.7151, 0.0706, 3.8452, 3.2959, 5.1270, 7.0801, -6.5430, 19.7388, -2.5504, 9.5918, -0.1347, 1.3428, 2.6855, 4.8828, 7.0801, -6.5430, 19.7388, -2.6935, 9.5517, -0.1730, 2.1973, 2.8076, 4.5166, 6.9336, -6.8359, 18.6279, -2.8347, 9.5577, -0.0856, 4.3335, 3.9673, 4.0894, 6.9336, -6.8359, 18.6279, -2.9245, 9.5080, 0.0527, 5.6763, 5.3101, 2.8076, 6.9336, -6.8359, 18.6279, -2.8838, 9.3913, 0.1065, 4.2114, 5.6763, 1.3428, 6.9336, -6.8359, 18.6279, -2.7013, 9.2955, -0.0192, 0.7935, 4.6997, 0.3052, 6.9336, -6.8359, 18.6279, -2.5983, 9.1967, -0.2005, -2.6245, 2.6245, 1.2207, 6.7017, -6.5063, 18.5181, -2.6384, 9.1650, -0.4693, -1.2207, 2.9297, 2.2583, 6.7017, -6.5063, 18.5181, -2.6677, 9.2087, -0.4238, 2.0142, 3.7231, 3.1738, 6.7017, -6.5063, 18.5181, -2.8311, 9.2464, -0.3089, 5.4321, 4.4556, 3.7231, 6.7017, -6.5063, 18.5181, -3.0029, 9.3116, -0.1766, 7.3242, 4.9438, 3.9063, 6.7017, -6.5063, 18.5181, -3.0442, 9.3224, -0.0539, 7.8735, 5.0049, 3.4790, 5.7983, -6.5918, 20.0195, -2.9227, 9.2727, 0.0030, 6.5308, 5.2490, 0.9155, 5.7983, -6.5918, 20.0195, -2.7228, 9.2332, -0.0491, 2.6855, 6.7139, 1.2817, 5.7983, -6.5918, 20.0195, -2.6815, 9.2721, -0.2795, 2.1973, 7.2632, 2.3193, 5.7983, -6.5918, 20.0195, -2.7731, 9.3111, -0.3789, 2.5635, 7.8125, 3.0518, 5.7983, -6.5918, 20.0195, -2.8868, 9.4367, -0.4058, 3.3569, 7.6904, 3.1738, 5.9326, -6.8359, 19.8853, -2.9503, 9.4595, -0.4052, 4.0283, 7.1411, 2.8076, 5.9326, -6.8359, 19.8853, -2.9515, 9.4673, -0.3938, 4.3945, 6.3477, 2.3193, 5.9326, -6.8359, 19.8853, -2.9700, 9.4481, -0.3831, 4.1504, 5.1270, 0.9155, 5.9326, -6.8359, 19.8853, -2.9299, 9.3518, -0.3424, 4.1504, 4.8828, -0.1221, 5.9326, -6.8359, 19.8853, -2.8790, 9.2973, -0.3065, 4.5166, 4.5776, -0.7935, 6.1279, -7.0801, 19.9097, -2.8593, 9.2285, -0.2071, 5.1270, 4.1504, -1.0376, 6.1279, -7.0801, 19.9097, -2.8700, 9.1776, -0.1143, 5.7983, 4.2725, -0.9155, 6.1279, -7.0801, 19.9097, -2.8832, 9.1159, -0.0233, 5.5542, 4.5776, -0.7324, 6.1279, -7.0801, 19.9097, -2.8455, 9.0914, -0.0251, 3.6621, 4.6997, -0.7324, 6.1279, -7.0801, 19.9097, -2.7623, 9.0638, -0.0640, -1.4648, 3.3569, -1.0376, 5.9448, -7.2266, 19.2505, -2.6665, 8.9519, -0.2370, -3.6621, 1.7700, -0.6714, 5.9448, -7.2266, 19.2505, -2.6462, 8.9693, -0.2903, -4.3335, 0.6714, 0.1831, 5.9448, -7.2266, 19.2505, -2.6354, 9.0465, -0.2855, -3.2349, 0.0610, 0.7935, 5.9448, -7.2266, 19.2505, -2.6827, 9.1189, -0.1604, -1.2207, 0.4883, 1.4038, 5.9448, -7.2266, 19.2505, -2.7222, 9.2075, -0.0030, 0.1221, 1.1597, 1.7700, 6.1523, -7.6538, 19.7388, -2.7330, 9.2141, 0.1101, -0.7324, 1.7090, 1.4648, 6.1523, -7.6538, 19.7388, -2.6833, 9.2380, -0.0599, -7.4463, 0.6714, 1.2207, 6.1523, -7.6538, 19.7388, -2.4744, 9.2075, -0.1784, -9.8877, 0.2441, 1.3428, 6.1523, -7.6538, 19.7388, -2.5361, 9.1836, -0.2771, -10.0708, 0.3662, 2.1362, 6.1523, -7.6538, 19.7388, -2.6474, 9.2410, -0.3705, -8.6670, 1.2207, 2.6855, 6.0425, -7.0068, 18.8965, -2.6911, 9.2985, -0.4076, -6.2256, 2.3804, 2.6245, 6.0425, -7.0068, 18.8965, -2.6911, 9.2955, -0.4070, -3.3569, 3.4180, 2.1362, 6.0425, -7.0068, 18.8965, -2.7072, 9.3105, -0.3669, -1.1597, 3.0518, 1.6479, 6.0425, -7.0068, 18.8965, -2.7258, 9.2632, -0.3932, -1.2207, 2.6245, 0.6714, 6.0425, -7.0068, 18.8965, -2.6701, 9.2267, -0.4226, -1.1597, 2.5024, -0.1221, 5.7251, -7.0190, 19.6289, -2.6270, 9.1399, -0.4196, -0.7324, 2.2583, -0.6714, 5.7251, -7.0190, 19.6289, -2.6833, 9.1189, -0.4076, -0.3662, 2.1362, -0.6714, 5.7251, -7.0190, 19.6289, -2.7485, 9.0854, -0.3753, 0.1221, 1.7700, -0.2441, 5.7251, -7.0190, 19.6289, -2.7946, 9.0615, -0.3603, 0.1221, 1.5869, -0.1221, 5.7251, -7.0190, 19.6289, -2.9113, 9.0800, -0.3352, -0.2441, 1.4038, -1.5259, 5.6396, -6.8481, 20.1538, -2.6456, 9.0531, -0.3388, -0.7935, 0.6714, -2.4414, 5.6396, -6.8481, 20.1538, -2.4834, 8.9908, -0.3567, -0.5493, 0.0000, -2.5635, 5.6396, -6.8481, 20.1538, -2.4690, 8.9824, -0.3490, 0.2441, -0.7935, -1.2817, 5.6396, -6.8481, 20.1538, -2.5887, 9.0291, -0.3268, 1.6479, -0.9766, 0.1831, 5.6396, -6.8481, 20.1538, -2.7252, 9.0776, -0.2658, 3.6011, -0.7935, 0.9155, 6.0669, -7.1167, 19.0063, -2.8928, 9.2129, -0.1365, 4.9438, 0.3662, 0.0610, 6.0669, -7.1167, 19.0063, -2.9299, 9.2560, 0.0096, 3.9063, 0.4883, -0.9155, 6.0669, -7.1167, 19.0063, -2.8162, 9.2069, 0.0245, 2.0142, 0.3052, -1.5259, 6.0669, -7.1167, 19.0063, -2.7491, 9.1219, 0.0036, 0.3052, -0.1221, -1.8921, 6.0669, -7.1167, 19.0063, -2.6935, 9.0878, -0.0730, -1.2817, -0.5493, -2.1362, 6.0181, -6.6772, 19.3237, -2.6743, 9.1004, -0.1682, -1.6479, -0.6714, -2.1973, 6.0181, -6.6772, 19.3237
};

/**
 * @brief      Copy raw feature data in out_ptr
 *             Function called by inference library
 *
 * @param[in]  offset   The offset
 * @param[in]  length   The length
 * @param      out_ptr  The out pointer
 *
 * @return     0
 */
int raw_feature_get_data(size_t offset, size_t length, float *out_ptr) {
    memcpy(out_ptr, features + offset, length * sizeof(float));
    return 0;
}

void print_inference_result(ei_impulse_result_t result);

/**
 * @brief      Arduino setup function
 */
void setup()
{
    // put your setup code here, to run once:
    Serial.begin(115200);
    // comment out the below line to cancel the wait for USB connection (needed for native USB)
    while (!Serial);
    Serial.println("Edge Impulse Inferencing Demo");
}

/**
 * @brief      Arduino main function
 */
void loop()
{
    ei_printf("Edge Impulse standalone inferencing (Arduino)\n");

    if (sizeof(features) / sizeof(float) != EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE) {
        ei_printf("The size of your 'features' array is not correct. Expected %lu items, but had %lu\n",
            EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE, sizeof(features) / sizeof(float));
        delay(1000);
        return;
    }

    ei_impulse_result_t result = { 0 };

    // the features are stored into flash, and we don't want to load everything into RAM
    signal_t features_signal;
    features_signal.total_length = sizeof(features) / sizeof(features[0]);
    features_signal.get_data = &raw_feature_get_data;

    // invoke the impulse
    EI_IMPULSE_ERROR res = run_classifier(&features_signal, &result, false /* debug */);
    if (res != EI_IMPULSE_OK) {
        ei_printf("ERR: Failed to run classifier (%d)\n", res);
        return;
    }

    // print inference return code
    ei_printf("run_classifier returned: %d\r\n", res);
    print_inference_result(result);

    delay(1000);
}

void print_inference_result(ei_impulse_result_t result) {

    // Print how long it took to perform inference
    ei_printf("Timing: DSP %d ms, inference %d ms, anomaly %d ms\r\n",
            result.timing.dsp,
            result.timing.classification,
            result.timing.anomaly);

    // Print the prediction results (object detection)
#if EI_CLASSIFIER_OBJECT_DETECTION == 1
    ei_printf("Object detection bounding boxes:\r\n");
    for (uint32_t i = 0; i < result.bounding_boxes_count; i++) {
        ei_impulse_result_bounding_box_t bb = result.bounding_boxes[i];
        if (bb.value == 0) {
            continue;
        }
        ei_printf("  %s (%f) [ x: %u, y: %u, width: %u, height: %u ]\r\n",
                bb.label,
                bb.value,
                bb.x,
                bb.y,
                bb.width,
                bb.height);
    }

    // Print the prediction results (classification)
#else
    ei_printf("Predictions:\r\n");
    for (uint16_t i = 0; i < EI_CLASSIFIER_LABEL_COUNT; i++) {
        ei_printf("  %s: ", ei_classifier_inferencing_categories[i]);
        ei_printf("%.5f\r\n", result.classification[i].value);
    }
#endif

    // Print anomaly result (if it exists)
#if EI_CLASSIFIER_HAS_ANOMALY == 1
    ei_printf("Anomaly prediction: %.3f\r\n", result.anomaly);
#endif

}